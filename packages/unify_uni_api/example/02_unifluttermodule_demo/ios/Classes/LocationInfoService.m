// =================================================
// Autogenerated from Unify 3.0.4, do not edit directly.
// =================================================

#import "LocationInfoService.h"
#import <Flutter/Flutter.h>

#import "LocationInfoModel.h"

static NSDictionary * mapClone(NSDictionary *dic);
static NSArray * listClone(NSArray *list) {
    NSMutableArray *newList = NSMutableArray.new;
    if ([list isKindOfClass:[NSNull class]]) return [newList copy];
    for (id value in list) {
        [newList addObject:
            [value isKindOfClass:[NSArray class]]? listClone(value) :
            [value isKindOfClass:[NSDictionary class]]?mapClone(value) :
            [value isKindOfClass:[LocationInfoModel class]]? [value toMap] :
            value];
    }
  
    return [newList copy];
}
    
static NSDictionary * mapClone(NSDictionary *dic) {
  NSMutableDictionary *newDic = NSMutableDictionary.new;
  if ([dic isKindOfClass:[NSNull class]]) return [newDic copy];
  for (id key in dic) {
      id value = [dic objectForKey:key];
      newDic[key] =
          [value isKindOfClass:[NSArray class]]? listClone(value) :
          [value isKindOfClass:[NSDictionary class]]? mapClone(value) :
          [value isKindOfClass:[LocationInfoModel class]]? [value toMap] :
          value;
  }
  return  [newDic copy];;
}
    
static NSDictionary * mapConvert(NSDictionary *dic, NSArray *generics, int depth);
static NSArray * listConvert(NSArray *list, NSArray *generics, int depth) {
        NSMutableArray *newList = NSMutableArray.new;
        if ([list isKindOfClass:[NSNull class]]) return [newList copy];
        for (id value in list) {
            [newList addObject:
                [generics[depth] isEqual:@"NSArray"]? listConvert(value, generics, depth+1) :
                [generics[depth] isEqual:@"NSDictionary"]? mapConvert(value, generics, depth+1) :
                [generics[depth] isEqual:@"LocationInfoModel"]? [LocationInfoModel fromMap: value] :
                value];
        }
      
        return [newList copy];
}

static NSDictionary * mapConvert(NSDictionary *dic, NSArray *generics, int depth) {
  NSMutableDictionary *newDic = NSMutableDictionary.new;
  if ([dic isKindOfClass:[NSNull class]]) return [newDic copy];
  for (id key in dic) {
      id value = [dic objectForKey:key];
      newDic[key] =
      [generics[depth] isEqual:@"NSArray"]? listConvert(value, generics, depth+1) :
      [generics[depth] isEqual:@"NSDictionary"]? mapConvert(value, generics, depth+1) :
      [generics[depth] isEqual:@"LocationInfoModel"]? [LocationInfoModel fromMap: value] :
      value;
  }
  return  [newDic copy];;
}

@interface LocationInfoService ()

@property(nonatomic, weak) id<FlutterBinaryMessenger> binaryMessenger; // Origin dart type is 'id'

@end

@implementation LocationInfoService

+ (instancetype)instance {
    static LocationInfoService *_instance = nil;
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        _instance = [[LocationInfoService alloc] init];
    });
    return _instance;
}

+ (void)setup:(id<FlutterBinaryMessenger>)binaryMessenger {
    [[self instance] setBinaryMessenger:binaryMessenger];
}
+ (void)updateLocationInfo:(LocationInfoModel*)model {
    FlutterBasicMessageChannel *channel =
        [FlutterBasicMessageChannel
            messageChannelWithName:@"com.didi.flutter.uni_api.LocationInfoService.updateLocationInfo"
            binaryMessenger:[[self instance] binaryMessenger]];

    // 数据处理
    NSDictionary *msg = [NSDictionary dictionaryWithObjectsAndKeys:
        [self wrapNil:[model toMap]], @"model",
        nil];

    // 发送消息
    [channel sendMessage:msg];
}

+ (id)wrapNil:(id)value {
    return value == nil ? [NSNull null] : value;
}

@end
